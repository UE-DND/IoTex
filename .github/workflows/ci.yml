name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  # 代码质量检查
  lint:
    name: 代码检查
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: 安装依赖
        run: npm ci

      - name: 运行 ESLint
        run: npm run lint

      - name: 检查代码格式
        run: npm run format:check

  # 类型检查
  typecheck:
    name: 类型检查
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: 安装依赖
        run: npm ci

      - name: TypeScript 类型检查
        run: npm run type-check

  # 测试
  test:
    name: 测试
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [22]
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 安装依赖
        run: npm ci

      - name: 运行测试
        run: npm test

      - name: 生成测试覆盖率报告
        if: matrix.os == 'ubuntu-latest'
        run: npm run test:coverage

  # 构建
  build:
    name: 构建
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test]
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: 安装依赖
        run: npm ci

      - name: 构建项目
        run: npm run build

      - name: 验证构建产物
        run: |
          test -f dist/index.js || exit 1
          test -f dist/index.d.ts || exit 1
          echo "✅ 构建产物验证通过"

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ github.sha }}
          path: dist/
          retention-days: 7

  # 生成文档
  docs:
    name: 生成文档
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: 安装依赖
        run: npm ci

      - name: 生成 API 文档
        run: npm run docs

      - name: 配置 GitHub Pages
        uses: actions/configure-pages@v4

      - name: 上传页面 artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/api

      - name: 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # 检查依赖安全性
  security:
    name: 安全检查
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: 检查依赖漏洞
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: 检查过期依赖
        run: npx npm-check-updates
        continue-on-error: true
